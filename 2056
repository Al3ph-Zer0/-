#include <iostream>
#include <vector>
#include <queue>
using namespace std;
 
int main() {
    int N;
    cin >> N;
 
    vector<int> adj[10002];
    int inDeg[10002] = { 0, };
    queue<int> q;
    int time[10002];
    int result[10002];
    for (int i = 1; i <= N; i++) {
        cin >> time[i];
        int preNum;
        cin >> preNum;
        for (int j = 0; j < preNum; j++) {
            int preBuild;
            cin >> preBuild;
            adj[preBuild].push_back(i);
            inDeg[i]++;
        }
    }
 
    for (int i = 1; i <= N; i++) {
        if (inDeg[i] == 0) {
            q.push(i);
        }
        result[i] = time[i];
    }
 
    while (!q.empty()) {
        int cur = q.front();
        q.pop();
 
        for (int i = 0; i < adj[cur].size(); i++) {
            int next = adj[cur][i];
            inDeg[next]--;
            result[next] = max(result[next], result[cur] + time[next]);
 
            if (inDeg[next] == 0) {
                q.push(next);
            }
        }
    }
 
    int ans = -1;
    for (int i = 1; i <= N; i++) {
        ans = max(ans, result[i]);
    }
    cout << ans;
 
    return 0;
}
